{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Interceptor para agregar headers automáticamente\nAPI.interceptors.request.use(config => {\n  const usuario = JSON.parse(localStorage.getItem('usuario') || '{}');\n  if (usuario.id) {\n    config.headers['usuario-id'] = usuario.id;\n    config.headers['rol'] = usuario.rol;\n  }\n  console.log('🔍 DEBUG Frontend - Headers enviados:', config.headers);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","usuario","JSON","parse","localStorage","getItem","id","headers","rol","console","log","error","Promise","reject"],"sources":["C:/Users/laund/OneDrive/Escritorio/Guardias-main/frontend/src/servicios/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Interceptor para agregar headers automáticamente\nAPI.interceptors.request.use(\n  (config) => {\n    const usuario = JSON.parse(localStorage.getItem('usuario') || '{}');\n    if (usuario.id) {\n      config.headers['usuario-id'] = usuario.id;\n      config.headers['rol'] = usuario.rol;\n    }\n    console.log('🔍 DEBUG Frontend - Headers enviados:', config.headers);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default API;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;EACnE,IAAIJ,OAAO,CAACK,EAAE,EAAE;IACdN,MAAM,CAACO,OAAO,CAAC,YAAY,CAAC,GAAGN,OAAO,CAACK,EAAE;IACzCN,MAAM,CAACO,OAAO,CAAC,KAAK,CAAC,GAAGN,OAAO,CAACO,GAAG;EACrC;EACAC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEV,MAAM,CAACO,OAAO,CAAC;EACpE,OAAOP,MAAM;AACf,CAAC,EACAW,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}